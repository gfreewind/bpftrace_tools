#!/usr/bin/bpftrace

#include <linux/socket.h>
#include <net/sock.h>
#include <net/inet_sock.h>


BEGIN {
	printf("Tracing udp_sendmsg. Hit Ctrl-C to end.\n");
	printf("%-8s %-32s %-8s %-16s ", "TIME", "FUNC", "PID", "COMM");
	printf("%-16s %-6s %-16s %-6s\n", "SADDR", "SPORT", "DADDR", "DPORT");
}

kprobe:udp_sendmsg {
	$sk = ((struct sock *)arg0);

	$saddr = ntop($sk->__sk_common.skc_rcv_saddr);	
	$daddr = ntop($sk->__sk_common.skc_daddr);
	$lport = $sk->__sk_common.skc_num;
	$dport = $sk->__sk_common.skc_dport;

	time("%H:%M:%S ");
	printf("%-32s ", "udp_send_msg");
	printf("%-8d %-16s ", pid, comm);
	printf("%-16s %-6d %-16s %-6d\n", $saddr, $lport, $daddr, $dport);
}

kprobe:udp_send_skb* {
	$skb = ((struct sk_buff*)arg0);
	$flow4 = ((struct flowi4*)arg1);

	$inet_sk = ((struct inet_sock *)($skb->sk));

	$saddr = ntop($flow4->saddr);
	$daddr = ntop($flow4->daddr);
	$lport = $inet_sk->inet_sport;
	$dport = $flow4->fl4_dport;
	
	time("%H:%M:%S ");
        printf("%-32s ", "udp_send_skb");
        printf("%-8d %-16s ", pid, comm);
        printf("%-16s %-6d %-16s %-6d\n", $saddr, $lport, $daddr, $dport);

}

